{"version":3,"sources":["utils/API.js","components/Container/index.js","components/SearchForm/index.js","components/SearchResults/index.js","components/TableHeader/index.js","components/Alert/index.js","components/Search/index.js","components/Main/index.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","BASEURL","headers","Container","props","className","style","children","SearchForm","id","htmlFor","onChange","handleInputChange","name","type","placeholder","SearchResults","order","results","sort","a","b","first","formatDate","date","dateArray","split","year","month","join","class","map","result","alt","src","picture","thumbnail","last","phone","email","dob","TableHeader","scope","onClick","handleClick","Alert","role","width","margin","marginTop","Search","state","search","employees","sortOrder","filteredEmps","error","event","letterInput","target","value","toLowerCase","filteredList","filter","item","includes","setState","handleSortChange","API","then","res","data","catch","err","console","log","minHeight","opacity","this","marginBottom","Component","Main","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34141d16.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/\";\r\n\r\nexport default{ \r\n    getAllEmployees:function(){    \r\n        return axios.get(BASEURL + \"?results=50\", {\r\n            headers: { \r\n                  'Access-Control-Allow-Origin' : '*'  // to fix cors error\r\n                },\r\n        });\r\n    }\r\n};","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n\r\n\r\n","import React from \"react\";\r\n\r\n// The input text field\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form className=\"search\" id=\"form-style\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"employee\">Employee Name:</label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          name=\"employee\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Type in a name to begin\"\r\n          id=\"employee\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\n\n// Responsible for the display of the table body\nfunction SearchResults(props) {\n  // Data is sorted alphabetically upon initial display and can be changed to reversed alphabetical order\n  if (props.order === \"ascend\") {\n    const res = props.results;\n    const sortedArray = res.sort((a, b) => (a.name.first > b.name.first) ? 1 : -1)\n  } else {\n    const res = props.results;\n    const sortedArray = res.sort((a, b) => (a.name.first > b.name.first) ? -1 : 1)\n  }\n\n  // To convert the date given from api to day/month/year\n  function formatDate(date){\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate =[day, month, year].join(\"-\");\n    return formattedDate;\n}\n\n  // Display the table body with the employees data. Table row key is the email which must be unique.\n  return (\n    <tbody class=\"table\">\n      {props.results.map(result => (\n        <tr key={result.email}>\n          <td><img alt=\"Employee photo\" src={result.picture.thumbnail} /></td>\n          <td>{result.name.first + \" \" + result.name.last}</td>\n          <td>{result.phone}</td>\n          <td>{result.email}</td>\n          <td>{formatDate(result.dob.date)}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default SearchResults;","import React from \"react\";\nimport \"./style.css\";\n\n// Name header is clickable to change the sort order of the results alpabetical or reverse alphabetical\nfunction TableHeader(props) {\n  return (\n    <thead>\n        <tr>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\" onClick={props.handleClick} id=\"name-heading\">Name</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">DOB</th>\n        </tr>\n    </thead>\n  );\n}\n\nexport default TableHeader;","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div\r\n      role=\"alert\"\r\n      className={`alert alert-${props.type} fade in`}\r\n      style={{ width: \"80%\", margin: \"0 auto\", marginTop: 18, ...props.style }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport Container from \"../Container/index\";\nimport SearchForm from \"../SearchForm/index\";\nimport SearchResults from \"../SearchResults/index\";\nimport TableHeader from \"../TableHeader/index\";\nimport Alert from \"../Alert/index\";\nimport \"./style.css\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    results: [],\n    sortOrder: \"ascend\",\n    filteredEmps: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available employees and update this.state.employees and filteredEmps\n  componentDidMount() {\n    API.getAllEmployees()\n      .then(res => this.setState({ employees: res.data.results, filteredEmps: res.data.results }))\n      .catch(err => console.log(err));\n  }\n\n  // Event handler triggered when text is added to the text box\n  handleInputChange = event => {\n    // Get the input and convert to lower case\n    const letterInput = (event.target.value).toLowerCase();\n    const allEmps = this.state.employees;\n    // Filter the employees array by the input text\n    const filteredList = (allEmps.filter(item => \n      ((item.name.first + \" \" + item.name.last).toLowerCase()).includes(letterInput))\n    )\n    // Only the filteredEmps is updated since employees will remain as the full list of employees\n    this.setState({ filteredEmps: filteredList });\n  }\n\n  // Triggered when Name is clicked on. Switches between sorting name alphabetically ascending or descending.\n  handleSortChange = event => {\n    if (this.state.sortOrder === \"ascend\") {\n      this.setState({ sortOrder: \"descend\" })\n    } else {\n      this.setState({ sortOrder: \"ascend\" })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <Alert\n            type=\"danger\"\n            style={{ opacity: this.state.error ? 1 : 0, marginBottom: 5 }}\n          >\n            {this.state.error}\n          </Alert>\n          <SearchForm\n            handleInputChange={this.handleInputChange}\n            employees={this.state.employees}\n          />\n          <div id=\"table-wrapper\">\n            <table>\n              <TableHeader handleClick={this.handleSortChange} />\n              <SearchResults results={this.state.filteredEmps} order={this.state.sortOrder} />\n            </table>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\r\nimport Search from \"../Search/index\";\r\n\r\n// Main page body\r\nfunction Main (){\r\n    return (\r\n        <div>\r\n            <Search />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Display the main heading\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Employee Directory</h1>\r\n            <p className=\"sub-heading\">Click on the Name heading to sort by name or use the search box to narrow your results</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Container from \"./components/Container\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>   \n        <Header />  \n        <Main />\n      </Container> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}